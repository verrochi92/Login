DROP DATABASE IF EXISTS LogIn;

CREATE DATABASE LogIn;
USE LogIn;

CREATE TABLE UserInfo (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(80) NOT NULL,
	lastName VARCHAR(80) NOT NULL,
	email VARCHAR(80) NOT NULL,
	password VARCHAR(80) NOT NULL,
	active BOOLEAN NOT NULL
);

ALTER TABLE UserInfo AUTO_INCREMENT = 1;

CREATE TABLE MusicTypes (
	typeId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	genre VARCHAR(80) NOT NULL
);

ALTER TABLE MusicTypes AUTO_INCREMENT = 1;

CREATE TABLE PartyTypes (
	typeId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	partyType VARCHAR(80) NOT NULL
);

ALTER TABLE PartyTypes AUTO_INCREMENT = 1;

CREATE TABLE Parties (
	partyId INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	partyName VARCHAR(80) NOT NULL,
	partyTypeId INT NOT NULL,
	musicTypeId INT NOT NULL,
	hostId INT NOT NULL,
	maxPeople INT NOT NULL,
	numAttending INT NOT NULL,
	dateHosted DATE NOT NULL,
	dateEnding DATE NOT NULL,
	description VARCHAR(200) NOT NULL,
	locationId VARCHAR(200) NOT NULL,
	FOREIGN KEY (partyTypeId) REFERENCES PartyTypes(typeId),
	FOREIGN KEY (musicTypeId) REFERENCES MusicTypes(typeId),
	FOREIGN KEY (hostId) REFERENCES UserInfo(id)
);

CREATE TABLE FriendsLists (
	id1 INT NOT NULL,
	id2 INT NOT NULL,
	FOREIGN KEY (id1) REFERENCES UserInfo(id),
	FOREIGN KEY (id2) REFERENCES UserInfo(id)
);

CREATE TABLE GuestLists (
	guestId INT NOT NULL,
	partyId INT NOT NULL,
	FOREIGN KEY (guestId) REFERENCES UserInfo(id),
	FOREIGN KEY (partyId) REFERENCES Parties(partyId)
);